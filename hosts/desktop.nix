# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:

{
  boot = {
    loader = {
      efi.canTouchEfiVariables = true;
      systemd-boot = {
        enable = true;
        configurationLimit = 20; # Only keep the last 20 generations.
        consoleMode = "keep";
        editor = false;
        memtest86.enable = true;
      };
    };
  };

  networking = {
    hostName = "Karl-Desktop";
    networkmanager.enable = true;
    # Interface-wide useDHCP will be deprecated, so per-interface useDHCP is used.
    useDHCP = false;
    interfaces = {
      eno1np0.useDHCP = true;
      eno2np1.useDHCP = true;
      # enp74s0f3u1u2c2.useDCHP = true;
    };
  };

  # Allow for my desktop to be reachable using the XRDP protocol
  services.xrdp.enable = true;

  services.xserver = {
    enable = true;
    videoDrivers = [ "nvidia" ]; # "nouveau" "intel" ];
    exportConfiguration = true; # Show xserver settings in xorg.conf file in /etc/X11/
  };

  hardware.nvidia = {
    package = config.boot.kernelPackages.nvidiaPackages.legacy_470;
    nvidiaSettings = true;
  };

  environment.systemPackages = with pkgs; [
    # ipmicfg
    ipmitool
    ipmiutil
  ];

  boot.kernelModules = [ "kvm-amd"
                         "ipmi_msghandler" # Core part of kernel modules
                         "ipmi_devintf" # Provide ioctls for ipmi device
                         "ipmi_si" # Provide system interfaces
                         "ipmi_ssif" # Access BMCs on SMBus
                         "ipmi_powernv" # Access POWERNV systems
                         "ipmi_watchdog" # Improve standard watchdog timers
                         "ipmi_poweroff" # Turn off system using IPMI
                       ];

  hardware = {
    opengl.enable = true; # Enable OpenGL.
    # Update microcode. Address "Firmware Bug" startup messages.
    cpu.amd.updateMicrocode = true;
  };

  nix.settings.max-jobs = lib.mkDefault 32;
  powerManagement.cpuFreqGovernor = lib.mkForce "performance";
}
